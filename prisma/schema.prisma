// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model devices {
  id                 String     @id @default(uuid())
  deviceType         String     @map("device_type")
  deviceName         String     @map("device_name")
  deviceDescription  String?    @map("device_description")
  serialNo           String     @unique @map("serial_no")
  deviceAssignmentId String?    @map("device_assignment_id")
  assignee           String?
  isOutdated         Boolean?   @map("is_outdated")
  createdAt          DateTime?  @default(now()) @map("created_at ")
  deletedAt          DateTime?  @map("deleted_at")
  updatedAt          DateTime?  @map("updated_at")
  employee           employees? @relation(fields: [employeeId], references: [id])
  employeeId         String?
  history            history[]
}

model employees {
  id               String    @id @default(uuid())
  employeeName     String    @map("employee_name")
  employeeEmail    String    @unique @map("employee_email")
  employeePassword String?   @map("employee_password")
  employeeType     String?   @default("employee") @map("employee_type")
  employeePhone    String    @map("employee_phone")
  employeeTeam     String    @map("employee_team")
  employeeStatus   String    @default("active") @map("employee_status")
  createdAt        DateTime  @default(now()) @map("created_at ")
  deletedAt        DateTime? @map("deleted_at")
  updatedAt        DateTime? @map("updated_at")
  devices          devices[]
  history          history[]
}

model history {
  id            String    @id @default(uuid())
  device        devices   @relation(fields: [deviceId], references: [id])
  deviceId      String    @map("device_id")
  employee      employees @relation(fields: [currentUser], references: [id])
  currentUser   String    @map("current_user")
  previousUsers String[]  @map("previous_users")
}
